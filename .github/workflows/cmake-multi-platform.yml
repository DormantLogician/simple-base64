name: CMake on multiple platforms

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
    inputs:
      logLevel:
          description: 'Log level'
          required: true
          default: 'warning'
          type: choice
          options:
          - info
          - warning
          - debug

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: true

      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        build_type: [Release]
        c_compiler: [gcc, clang, cl]
        include:
          - os: windows-latest
            c_compiler: cl
            cpp_compiler: cl
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
          - os: ubuntu-latest
            c_compiler: clang
            cpp_compiler: clang++
          - os: macos-latest
            c_compiler: gcc
            cpp_compiler: g++
          - os: macos-latest
            c_compiler: clang
            cpp_compiler: clang++
        exclude:
          - os: windows-latest
            c_compiler: gcc
          - os: windows-latest
            c_compiler: clang
          - os: ubuntu-latest
            c_compiler: cl

    steps:
    - uses: actions/checkout@v4

    - name: Setup virtual environment
      run: python3 -m venv virtualenv

    - name: Install Conan
      run: if ["$RUNNER_OS" == "Windows"]; then
        virtualenv/Scripts/activate && pip3 install conan
      else
        source virtualenv/bin/activate && pip3 install conan

    - name: Configure Conan
      run: conan profile detect && conan install . --build=missing
      
    - name: Configure CMake
      run: cmake --preset conan-default

    - name: Build project
      run: cmake --build --preset conan-release --config release

    - name: Run tests
      run: ctest --preset conan-release -C release

    - name: Package project
      run: cmake -P ${{ github.workspace }}/util/task/package.cmake
      
    - name: Install project
      run: cmake --install {{ github.workspace }}/built --config Release

      